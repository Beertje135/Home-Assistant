# WEBHOOKS SENSOR FOR TRANSLATING PLEX WEBHOOKS TO MQTT

- platform: mqtt
  name: Plex MQTT Sensor
  state_topic: 'plex/update/sensor'
  value_template: '{{ value_json.Event == "media.resume" or value_json.Event == "media.play" }}'
  json_attributes_topic: "plex/update/sensor"

# DOORBELL SENSOR

- platform: mqtt
  name: Deurbel Voor MQTT Battery Sensor
  state_topic: 'doorbellsensorfront/status/battery'
  value_template: '{{value_json.batt}}'
  unit_of_measurement: "Volts"

- platform: mqtt
  name: Deurbel Voor MQTT Sensor
  state_topic: 'doorbellsensorfront/status'
  value_template: '{{value_json.Event}}'

# WEATHER PLATFORM

- platform: season
  type: astronomical

# CUSTOM SENSOR AFVAL

- platform: afvalbeheer
  wastecollector: RecycleApp
  resources:
    - restafval
    - papier
    - pmd
    - glas 
  postcode: !secret zone_home_postcode
  streetname: !secret zone_home_streetname
  streetnumber: !secret zone_home_housenumber
  dateformat: '%Y-%m-%d'
  dateonly: 1
  dutch: 1
  builtinicons: 1

# SENSORS USED TO DIPLAY ONLY CURRENT TEMPERATURE ON FRONTEND (ELSE YOU HAVE SET TEMPERATURE)

- platform: template
  sensors:
    climate_badkamer_attribute_current_temperature:
      value_template: "{{ (state_attr('climate.badkamer', 'current_temperature') | float ) | round(2) }}"
      unit_of_measurement: '°C'
    climate_dressing_attribute_current_temperature:
      value_template: "{{ (state_attr('climate.dressing', 'current_temperature') | float ) | round(2) }}"
      unit_of_measurement: '°C'
    climate_kamer_elmo_attribute_current_temperature:
      value_template: "{{ (state_attr('climate.kamer_elmo', 'current_temperature') | float ) | round(2) }}"
      unit_of_measurement: '°C'
    climate_keuken_attribute_current_temperature:
      value_template: "{{ (state_attr('climate.keuken', 'current_temperature') | float ) | round(2) }}"
      unit_of_measurement: '°C'
    climate_slp_kamer_attribute_current_temperature:
      value_template: "{{ (state_attr('climate.slp_kamer', 'current_temperature') | float ) | round(2) }}"
      unit_of_measurement: '°C'
    climate_woonkamer_attribute_current_temperature:
      value_template: "{{ (state_attr('climate.woonkamer', 'current_temperature') | float ) | round(2) }}"
      unit_of_measurement: '°C'
    climate_veranda_attribute_current_temperature:
      value_template: "{{ (((state_attr('climate.woonkamer', 'current_temperature') | float ) + (state_attr('climate.keuken', 'current_temperature') | float )) / 2) | round(2) }}"
      unit_of_measurement: '°C'

- platform: template
  sensors:
    template_ons_huisje_set_temperature:
      value_template: "{{ (((state_attr('climate.badkamer', 'temperature') | float ) + (state_attr('climate.keuken', 'temperature') | float ) + (state_attr('climate.woonkamer', 'temperature') | float ) + (state_attr('climate.dressing', 'temperature') | float ) + (state_attr('climate.slp_kamer', 'temperature') | float ) + (state_attr('climate.kamer_elmo', 'temperature') | float )) / 6) | round(2) }}"
      unit_of_measurement: '°C'

- platform: template
  sensors:
    template_delta_set_temperature:
      value_template: >
        {% set diffa = ((states('sensor.template_ons_huisje_set_temperature') | float ) - (states('sensor.hue_sensor_tuin_temperature') | float )) | round (2) %}
        {{ diffa if diffa > 0 else (diffa * -1)}}
      unit_of_measurement: '°C'

- platform: template
  sensors:
    template_delta_temperature:
      value_template: >
        {% set diffb = ((state_attr('climate.ons_huisje', 'current_temperature') | float ) - (states('sensor.hue_sensor_tuin_temperature') | float )) | round (2) %}
        {{ diffb if diffb > 0 else (diffb * -1)}}
      unit_of_measurement: '°C'

- platform: template
  sensors:
    hue_sensor_veranda_light_level:
      value_template: >
        {{ (((states('sensor.hue_sensor_keuken_light_level') | float) + (states('sensor.hue_sensor_keuken_light_level') | float) + (states('sensor.hue_sensor_woonkamer_light_level') | float)) / 3) | round(2) }}
      unit_of_measurement: 'lx'

# SENSOR TO RENAME ON AND OFF FOR VISITOR SO IT CAN BE INCLUDED IN GROUP_BEZOEKER

- platform: template
  sensors:
    bezoek:
      value_template: >-
        {% if is_state("input_boolean.visitor", "on") %}
          home
        {% else %}
          not_home
        {% endif %}

# SENSOR TO RENAME ON AND OFF FOR KUISDAG CALENDER SO IT CAN BE INCLUDED IN GROUP_BEZOEKER

- platform: template
  sensors:
    kuishulp:
      value_template: >-
        {% if is_state("calendar.kuishulp_agenda", "on") %}
          home
        {% else %}
          not_home
        {% endif %}

# SENSOR TO RENAME ON AND OFF FOR BABYSIT SO IT CAN BE INCLUDED

- platform: template
  sensors:
    babysit:
      value_template: >-
        {% if is_state("calendar.babysit_agenda", "on") %}
          home
        {% else %}
          not_home
        {% endif %}

# SENSOR TO MONITOR TRAIN CONNECTION

- platform: nmbs
  station_from: "Willebroek"
  station_to: "Mechelen"
  exclude_vias: true
  name: nmbs

- platform: nmbs
  station_from: "Mechelen"
  station_to: "Willebroek"
  exclude_vias: true
  name: nmbs_3

- platform: nmbs
  station_from: "Brussel-Centraal"
  station_to: "Mechelen"
  exclude_vias: true
  name: nmbs_4

- platform: nmbs
  station_from: "Mechelen"
  station_to: "Brussel-Centraal"
  exclude_vias: true
  name: nmbs_2

- platform: template
  sensors:
    nmbs_template:
      value_template: "{{ state_attr('sensor.nmbs', 'vehicle_id') }}"
    nmbs_2_template:
      value_template: "{{ state_attr('sensor.nmbs_2', 'vehicle_id') }}"
    nmbs_3_template:
      value_template: "{{ state_attr('sensor.nmbs_3', 'vehicle_id') }}"
    nmbs_4_template:
      value_template: "{{ state_attr('sensor.nmbs_4', 'vehicle_id') }}"

# SENSORS TO CALCULATE SMAPPEE - STANDARD SMAPPEE NUMBERS ARE WRONG!

#- platform: template
#  sensors:
#    ons_huisje_sensor_water:
#      value_template: "{{ states('sensor.smappee_ons_huisje_water_sensor_1') | int / 2 }}"
#      unit_of_measurement: m³
#    ons_huisje_sensor_gas:
#      value_template: "{{ states('sensor.smappee_ons_huisje_water_sensor_2') | int / 100 }}"
#      unit_of_measurement: m³

#- platform: template
#  sensors:
#    template_elektricity_current_usage:
#      value_template: "{{ ((states('sensor.ons_huisje_total_consumption_active_power') | float ) + (states('sensor.solaredge_current_power') | float )) | round(2) }}"
#      unit_of_measurement: 'W'
#    template_elektricity_daily_usage:
#      value_template: "{{ ((states('sensor.ons_huisje_total_consumption_today') | float ) + (states('sensor.solaredge_energy_today_template') | float )) | round(2) }}"
#      unit_of_measurement: 'kWh'

# SENSORS TO ADAPT SOLAR EDGE & SMAPPEE DISPLAYED UNITS

- platform: template
  sensors:
#    solaredge_current_power_template:
#      value_template: "{{ (states('sensor.solaredge_current_power') | float / 1000) | round(2) }}"
#      unit_of_measurement: 'kWh'
    solaredge_energy_today_template:
      value_template: "{{ (states('sensor.solaredge_energy_today') | float / 1000) | round(2) }}"
      unit_of_measurement: 'kWh'
    solaredge_energy_this_month_template:
      value_template: "{{ (states('sensor.solaredge_energy_this_month') | float / 1000) | round(2) }}"
      unit_of_measurement: 'kWh'
    solaredge_energy_this_year_template:
      value_template: "{{ (states('sensor.solaredge_energy_this_year') | float / 1000) | round(2) }}"
      unit_of_measurement: 'kWh'
    solaredge_lifetime_energy_template:
      value_template: "{{ (states('sensor.solaredge_lifetime_energy') | float / 1000000) | round(2) }}"
      unit_of_measurement: 'MWh'
#    smappee_ons_huisje_power_today_template:
#      value_template: "{{ (states('sensor.ons_huisje_total_consumption_today') | float * 1000) | round(2) }}"
#      unit_of_measurement: 'Wh'
#    smappee_ons_huisje_active_power_template:
#      value_template: "{{ (states('sensor.ons_huisje_total_consumption_active_power') | float / 1000) | round(2) }}"
#      unit_of_measurement: 'kWh'

# SENSOR TO CHECK STATE OF RASPBERRY PI

- platform: systemmonitor
  resources:
    - type: disk_use_percent
      arg: /home
    - type: memory_use_percent
    - type: processor_use
    - type: last_boot

- platform: command_line
  name: CPU Temperature
  command: "cat /sys/class/thermal/thermal_zone0/temp"
  # If errors occur, make sure configuration file is encoded as UTF-8
  unit_of_measurement: '°C'
  value_template: "{{ value | multiply(0.001) | round(1) }}"

# SENSOR TO CONNECT ARLO BABY CAMERA

- platform: aarlo
  monitored_conditions:
   - battery_level
   - temperature
   - humidity
   - air_quality

# SENSOR TO USE DATE AND TIME

- platform: time_date
  display_options:
    - 'time'
    - 'date'
    - 'date_time'
