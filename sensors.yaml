# WEBHOOKS SENSOR FOR TRANSLATING PLEX WEBHOOKS TO MQTT

- platform: mqtt
  name: Plex MQTT Sensor
  state_topic: 'plex/update/sensor'
  value_template: '{{ value_json.Event == "media.resume" or value_json.Event == "media.play" }}'
  json_attributes_topic: "plex/update/sensor"

# WEATHER PLATFORM

- platform: season
  type: astronomical

# CUSTOM SENSOR AFVAL

- platform: ophaalkalender
  resources:
    - restafval
    - papier
    - pmd
  postcode: !secret zone_home_postcode
  streetname: !secret zone_home_streetname
  streetnumber: !secret zone_home_housenumber
  dateformat: '%Y-%m-%d'
  dateonly: 1

# SENSORS USED TO DIPLAY ONLY CURRENT TEMPERATURE ON FRONTEND (ELSE YOU HAVE SET TEMPERATURE)

- platform: template
  sensors:
    climate_badkamer_attributes_temperature:
      value_template: "{{ state_attr('climate.badkamer', 'temperature') }}"
      entity_id: climate.badkamer
    climate_keuken_attributes_temperature:
      value_template: "{{ state_attr('climate.keuken', 'temperature') }}"
      entity_id: climate.keuken
    climate_woonkamer_attributes_temperature:
      value_template: "{{ state_attr('climate.woonkamer', 'temperature') }}"
      entity_id: climate.woonkamer
    climate_dressing_attributes_temperature:
      value_template: "{{ state_attr('climate.dressing', 'temperature') }}"
      entity_id: climate.dressing
    climate_slp_kamer_attributes_temperature:
      value_template: "{{ state_attr('climate.slp_kamer', 'temperature') }}"
      entity_id: climate.slp_kamer
    climate_kamer_elmo_attributes_temperature:
      value_template: "{{ state_attr('climate.kamer_elmo', 'temperature') }}"
      entity_id: climate.kamer_elmo
    climate_badkamer_attributes_current_temperature:
      value_template: "{{ state_attr('climate.badkamer', 'current_temperature') }}"
      entity_id: climate.badkamer
    climate_keuken_attributes_current_temperature:
      value_template: "{{ state_attr('climate.keuken', 'current_temperature') }}"
      entity_id: climate.keuken
    climate_woonkamer_attributes_current_temperature:
      value_template: "{{ state_attr('climate.woonkamer', 'current_temperature') }}"
      entity_id: climate.woonkamer
    climate_dressing_attributes_current_temperature:
      value_template: "{{ state_attr('climate.dressing', 'current_temperature') }}"
      entity_id: climate.dressing
    climate_slp_kamer_attributes_current_temperature:
      value_template: "{{ state_attr('climate.slp_kamer', 'current_temperature') }}"
      entity_id: climate.slp_kamer
    climate_kamer_elmo_attributes_current_temperature:
      value_template: "{{ state_attr('climate.kamer_elmo', 'current_temperature') }}"
      entity_id: climate.kamer_elmo
    climate_badkamer_attributes_hvac_action:
      value_template: "{{ state_attr('climate.badkamer', 'hvac_action') }}"
      entity_id: climate.badkamer
    climate_keuken_attributes_hvac_action:
      value_template: "{{ state_attr('climate.keuken', 'hvac_action') }}"
      entity_id: climate.keuken
    climate_woonkamer_attributes_hvac_action:
      value_template: "{{ state_attr('climate.woonkamer', 'hvac_action') }}"
      entity_id: climate.woonkamer
    climate_dressing_attributes_hvac_action:
      value_template: "{{ state_attr('climate.dressing', 'hvac_action') }}"
      entity_id: climate.dressing
    climate_slp_kamer_attributes_hvac_action:
      value_template: "{{ state_attr('climate.slp_kamer', 'hvac_action') }}"
      entity_id: climate.slp_kamer
    climate_kamer_elmo_attributes_hvac_action:
      value_template: "{{ state_attr('climate.kamer_elmo', 'hvac_action') }}"
      entity_id: climate.kamer_elmo

- platform: template
  sensors:
    template_delta_temperature:
      value_template: "{{ ((state_attr('climate.ons_huisje', 'current_temperature') | float ) - (state_attr('weather.dark_sky', 'temperature') | float )) }}"
      unit_of_measurement: '°C'
      entity_id:
        - climate.ons_huisje
        - weather.dark_sky

- platform: template
  sensors:
    climate_ons_huisje_attributes_current_temperature:
      value_template: "{{ state_attr('climate.ons_huisje', 'current_temperature') }}"
      entity_id: climate.ons_huisje

# SENSOR TO RENAME ON AND OFF FOR VISITOR SO IT CAN BE INCLUDED IN GROUP_BEZOEKER

- platform: template
  sensors:
    bezoek:
      value_template: >-
        {% if is_state("input_boolean.visitor", "on") %}
          home
        {% else %}
          not_home
        {% endif %}

# SENSOR TO RENAME ON AND OFF FOR KUISDAG CALENDER SO IT CAN BE INCLUDED IN GROUP_BEZOEKER

- platform: template
  sensors:
    kuishulp:
      value_template: >-
        {% if is_state("calendar.kuishulp_agenda", "on") %}
          home
        {% else %}
          not_home
        {% endif %}

# SENSOR TO RENAME ON AND OFF FOR BABYSIT SO IT CAN BE INCLUDED

- platform: template
  sensors:
    babysit:
      value_template: >-
        {% if is_state("calendar.babysit_agenda", "on") %}
          home
        {% else %}
          not_home
        {% endif %}

# SENSOR TO MONITOR TRAIN CONNECTION

- platform: nmbs
  station_from: "Willebroek"
  station_to: "Mechelen"
  exclude_vias: true
  name: nmbs

- platform: nmbs
  station_from: "Mechelen"
  station_to: "Willebroek"
  exclude_vias: true
  name: nmbs_3

- platform: nmbs
  station_from: "Brussel-Centraal"
  station_to: "Mechelen"
  exclude_vias: true
  name: nmbs_4

- platform: nmbs
  station_from: "Mechelen"
  station_to: "Brussel-Centraal"
  exclude_vias: true
  name: nmbs_2

- platform: template
  sensors:
    nmbs_template:
      value_template: "{{ state_attr('sensor.nmbs', 'vehicle_id') }}"
    nmbs_2_template:
      value_template: "{{ state_attr('sensor.nmbs_2', 'vehicle_id') }}"
    nmbs_3_template:
      value_template: "{{ state_attr('sensor.nmbs_3', 'vehicle_id') }}"
    nmbs_4_template:
      value_template: "{{ state_attr('sensor.nmbs_4', 'vehicle_id') }}"

# SENSORS TO CALCULATE SMAPPEE - STANDARD SMAPPEE NUMBERS ARE WRONG!

- platform: template
  sensors:
    smappee_ons_huisje_water_sensor_1_template:
      value_template: "{{ states('sensor.smappee_ons_huisje_water_sensor_1') | int / 2 }}"
      unit_of_measurement: L
    smappee_ons_huisje_water_sensor_2_template:
      value_template: "{{ states('sensor.smappee_ons_huisje_water_sensor_2') | int / 100 }}"
      unit_of_measurement: m³

- platform: template
  sensors:
    template_elektricity_current_usage:
      value_template: "{{ ((states('sensor.smappee_ons_huisje_active_power') | float ) + (states('sensor.solaredge_current_power') | float )) | round(2) }}"
      unit_of_measurement: 'W'
    template_elektricity_daily_usage:
      value_template: "{{ ((states('sensor.smappee_ons_huisje_power_today') | float ) + (states('sensor.solaredge_energy_today_template') | float )) | round(2) }}"
      unit_of_measurement: 'kWh'

# SENSORS TO ADAPT SOLAR EDGE & SMAPPEE DISPLAYED UNITS

- platform: template
  sensors:
#    solaredge_current_power_template:
#      value_template: "{{ (states('sensor.solaredge_current_power') | float / 1000) | round(2) }}"
#      unit_of_measurement: 'kWh'
    solaredge_energy_today_template:
      value_template: "{{ (states('sensor.solaredge_energy_today') | float / 1000) | round(2) }}"
      unit_of_measurement: 'kWh'
    solaredge_energy_this_month_template:
      value_template: "{{ (states('sensor.solaredge_energy_this_month') | float / 1000) | round(2) }}"
      unit_of_measurement: 'kWh'
    solaredge_energy_this_year_template:
      value_template: "{{ (states('sensor.solaredge_energy_this_year') | float / 1000) | round(2) }}"
      unit_of_measurement: 'kWh'
    solaredge_lifetime_energy_template:
      value_template: "{{ (states('sensor.solaredge_lifetime_energy') | float / 1000000) | round(2) }}"
      unit_of_measurement: 'MWh'
    smappee_ons_huisje_power_today_template:
      value_template: "{{ (states('sensor.smappee_ons_huisje_power_today') | float * 1000) | round(2) }}"
      unit_of_measurement: 'Wh'
#    smappee_ons_huisje_active_power_template:
#      value_template: "{{ (states('sensor.smappee_ons_huisje_active_power') | float / 1000) | round(2) }}"
#      unit_of_measurement: 'kWh'

# SENSOR TO CHECK STATE OF RASPBERRY PI

- platform: systemmonitor
  resources:
    - type: disk_use_percent
      arg: /home
    - type: memory_use_percent
    - type: processor_use
    - type: last_boot

# SENSOR TO CONNECT ARLO BABY CAMERA

- platform: arlo

# SENSOR TO USE DATE AND TIME

- platform: time_date
  display_options:
    - 'time'
    - 'date'
    - 'date_time'
