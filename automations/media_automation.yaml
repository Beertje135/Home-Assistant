# AUTOMATIONS BASED ON MEDIA PLAY

# AUTOMATION PUBLISH WEBHOOK TO MQTT

- alias: Plex - Webhook - to MQTT
  trigger:
    platform: webhook
    webhook_id: !secret webhook_plex
  action:
   - service: mqtt.publish
     data_template:
       topic: 'plex/update'
       payload_template: >
         {{ (trigger.data | string)[154:][:-55] | replace ("\\\\", "\\") | replace ("\\\'", "'") | replace ("\\x","?") }}

- alias: Plex - Webhook - Update MQTT sensor
  trigger:
    platform: mqtt
    topic: 'plex/update'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{trigger.payload_json.event != 'media.scrobble'}}"
      - condition: template
        value_template: "{{trigger.payload_json.event != 'media.rate'}}"
  action:
    - service: mqtt.publish
      data_template:
        topic: 'plex/update/sensor'
        retain: true
        payload_template: >
         {  "Player":"{{ trigger.payload_json.Player.title }}",
            "UUID":"{{ trigger.payload_json.Player.uuid }}",
            "Event":"{{ trigger.payload_json.event }}",
            "Account":"{{ trigger.payload_json.Account.title }}",
            "Title":"{{ trigger.payload_json.Metadata.grandparentTitle }}",
            "Type":"{{ trigger.payload_json.Metadata.librarySectionType }}",
            "Image":"{{ trigger.payload_json.Metadata.thumb }}" }

# AUTOMATION CHECK MQTT

- alias: Plex - Webhook - Toggle Living Room Boolean
  trigger:
    platform: mqtt
    topic: 'plex/update'
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: "{{trigger.payload_json.Account['title'] == 'Bert Verlinden'}}"
    - condition: template
      value_template: "{{trigger.payload_json.Player.title != 'iPhone'}}"
    - condition: template
      value_template: "{{trigger.payload_json.event != 'media.scrobble'}}"
    - condition: template
      value_template: "{{trigger.payload_json.event != 'media.rate'}}"
    - condition: or
      conditions:
      - condition: template
        value_template: "{{trigger.payload_json.Player.title == 'Apple TV Woonkamer'}}"
      - condition: template
        value_template: "{{trigger.payload_json.Player.title == 'LG OLED55C9MLB'}}"
  action:
    service_template: >
        {% if ((trigger.payload_json.event == 'media.play') or (trigger.payload_json.event == 'media.resume')) %}
          input_boolean.turn_on
        {% elif ((trigger.payload_json.event == 'media.pause') or (trigger.payload_json.event == 'media.stop')) %}
          input_boolean.turn_off
        {% endif %}
    entity_id: input_boolean.media_livingroom


- alias: Plex - Webhook - Toggle Kitchen Boolean
  trigger:
    platform: mqtt
    topic: 'plex/update'
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: "{{trigger.payload_json.Account['title'] == 'Bert Verlinden'}}"
    - condition: template
      value_template: "{{trigger.payload_json.Player.title != 'iPhone'}}"
    - condition: template
      value_template: "{{trigger.payload_json.event != 'media.scrobble'}}"
    - condition: template
      value_template: "{{trigger.payload_json.event != 'media.rate'}}"
    - condition: or
      conditions:
      - condition: template
        value_template: "{{trigger.payload_json.Player.title == 'Apple TV Keuken'}}"
      - condition: template
        value_template: "{{trigger.payload_json.Player.title == 'Chrome'}}"
  action:
    service_template: >
        {%- if ((trigger.payload_json.event == 'media.play') or (trigger.payload_json.event == 'media.resume')) -%}
          input_boolean.turn_on
        {%- elif ((trigger.payload_json.event == 'media.pause') or (trigger.payload_json.event == 'media.stop')) -%}
          input_boolean.turn_off
        {%- endif %}
    entity_id: input_boolean.media_kitchen

# AUTOMATION CHECK MEDIA PLAY 

- alias: Apple TV - Toogle Living Room Boolean
  trigger:
    platform: state
    entity_id: media_player.apple_tv_woonkamer
  condition:
  action:
    service_template: >
        {% if states('media_player.apple_tv_woonkamer') in ['playing'] %}
          input_boolean.turn_on
        {% elif states('media_player.apple_tv_woonkamer') not in ['playing'] %}
          input_boolean.turn_off
        {% endif %}
    entity_id: input_boolean.media_livingroom

- alias: Apple TV - Toogle Kitchen Room Boolean
  trigger:
    platform: state
    entity_id: media_player.apple_tv_keuken
  condition:
  action:
    service_template: >
        {% if states('media_player.apple_tv_keuken') in ['playing'] %}
          input_boolean.turn_on
        {% elif states('media_player.apple_tv_keuken') not in ['playing'] %}
          input_boolean.turn_off
        {% endif %}
    entity_id: input_boolean.media_kitchen

# AUTOMATION FOR LIGHT ALL WHEN MEDIA BOOLEAN CHANGES

- alias: Media Play - Licht - Woonkamer
  trigger:
  - platform: state
    entity_id: input_boolean.media_livingroom
  condition:
  action:
  - service: script.turn_on
    data_template:
      entity_id: >
        {%- if states('input_boolean.media_livingroom') in ['on'] -%}
          script.plex_on_woonkamer
        {%- elif states('input_boolean.media_livingroom') in ['off'] -%}
          script.plex_off_woonkamer
        {% endif %}

- alias: Media Play - Licht - Keuken
  trigger:
  - platform: state
    entity_id: input_boolean.media_kitchen
  condition:
  action:
  - service: script.turn_on
    data_template:
      entity_id: >
        {%- if states('input_boolean.media_kitchen') in ['on'] -%}
          script.plex_on_keuken
        {%- elif states('input_boolean.media_kitchen') in ['off'] -%}
          script.plex_off_keuken
        {% endif %}
